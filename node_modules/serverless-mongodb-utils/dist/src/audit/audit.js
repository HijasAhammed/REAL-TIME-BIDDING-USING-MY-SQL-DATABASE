"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.auditRecord = void 0;
const dbUtils_1 = require("../dbUtils");
const Audit_1 = require("../entities/Audit");
const Audit_2 = require("../modules/Audit");
const auditRecord = (userId, userName, action, id, date, collection) => __awaiter(void 0, void 0, void 0, function* () {
    // Store the audit record in the database
    const auditRecord = new Audit_2.Audit();
    auditRecord.userId = userId.toString();
    auditRecord.action = action;
    auditRecord.documentId = id !== null && id !== void 0 ? id : '';
    auditRecord.createdAt = date;
    auditRecord.userName = userName;
    auditRecord.collection = collection;
    const db = yield (0, dbUtils_1.connectToDb)();
    const repo = db.collection(Audit_1.auditCollection);
    yield repo.insertOne(auditRecord);
});
exports.auditRecord = auditRecord;
