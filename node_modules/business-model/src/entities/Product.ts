import { type ObjectId } from 'mongodb'
import { connectToDb } from 'serverless-mongodb-utils'

export interface IBaseProduct {
  _id: ObjectId
  name: string
  description: string
  category: string
  brand: string
  costPrice: number
  wholesalePrice: number
  availableQuantity: number
}

export const productsCollection = 'products'

export const createProductCollection = async (): Promise<void> => {
  try {
    const database = await connectToDb()

    // Create a collection
    const options = {
      validator: {
        $jsonSchema: {
          bsonType: 'object',
          required: ['name', 'description', 'category', 'brand', 'costPrice', 'wholesalePrice', 'availableQuantity'],
          properties: {
            _id: {
              bsonType: 'objectId'
            },
            name: {
              bsonType: 'string'
            },
            description: {
              bsonType: 'string'
            },
            category: {
              bsonType: 'string'
            },
            brand: {
              bsonType: 'string'
            },
            costPrice: {
              bsonType: 'double'
            },
            wholesalePrice: {
              bsonType: 'double'
            },
            availableQuantity: {
              bsonType: 'int'
            }
          }
        }
      }
    }
    await database.createCollection<IBaseProduct>(productsCollection, options)
  } catch (error) {
    console.error(`Error in creating Product Collection : ${String(error)}`)
  }
}
